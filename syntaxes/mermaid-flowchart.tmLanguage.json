{
  "scopeName": "source.mermaid.flowchart",
  "name":"flowchart",
  "patterns": [
    { "include": "#configDirective" },
    { "include": "#typeKeywords" },
    { "include": "#blockKeywords" },
    { "include": "#keywords" },
    { "include": "#comments" },
    { "include": "#variables" },
    { "include": "#transitions" },
    { "include": "#strings" }
  ],
  "repository": {
    "configDirective": {
      "name": "meta.directive.config.mermaid",
      "begin": "^\\s*%%(?=\\{)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.directive.mermaid"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.directive.end.mermaid"
        }
      },
      "patterns": [
        {
          "name": "source.js.embedded.mermaid",
          "match": ".*"
        }
      ]
    },
    "typeKeywords": {
      "patterns": [
        {
          "name": "keyword.control.type.mermaid",
          "match": "\\b(flowchart|flowchart-v2|graph)\\b"
        }
      ]
    },
    "blockKeywords": {
      "patterns": [
        {
          "name": "keyword.control.block.mermaid",
          "match": "\\b(subgraph|end)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.other.mermaid",
          "match": "\\b(TB|TD|BT|RL|LR|click|call|href|_self|_blank|_parent|_top|linkStyle|style|classDef|class|direction|interpolate)\\b"
        }
      ]
    },
      "strings": {
        "patterns": [
          {
            "name": "string.color.mermaid",
            "match": "#[A-Fa-f0-9]{6}|#[A-Fa-f0-9]{3}"
          },
          {
            "name": "string.quoted.double.mermaid",
            "match": "\".*?\""
          },
          {
            "name": "string.quoted.special.mermaid",
            "match": "\\|+[^\\|]+\\|+"
          },
          {
            "name": "string.quoted.bracket.mermaid",
            "match": "\\[[^\\[\\]]+\\]"
          },
          {
            "name": "string.quoted.angle.mermaid",
            "match": "<[^<>]+>"
          },
          {
            "name": "string.quoted.curly.mermaid",
            "match": "\\{[^{}]+\\}"
          },
          {
            "name": "string.quoted.parenthesis.mermaid",
            "match": "\\([^()]+\\)"
          }
        ]
      },
      "variables": {
        "patterns": [
          {
            "name": "variable.name.mermaid",
            "match": "\\b[A-Za-z][\\w$]*\\b"
          }
        ]
      }
    ,
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-percent.mermaid",
          "match": "%%.*$"
        }
      ]
    },
    "delimiters": {
      "patterns": [
        {
          "name": "delimiter.bracket.mermaid",
          "match": "[&;]"
        }
      ]
    },
   "transitions": {
      "patterns": [
        {
          "name": "keyword.control.transition.mermaid",
          "match": "[ox]?(--+|==+)[ox]?"
        },
        {
          "name": "keyword.control.transition.mermaid",
          "match": "-\\.+->?"
        },
        {
          "name": "string.label.mermaid",
          "match": "(?<=--|==)([^>-]+?)(?=-->|==>)",
          "captures": {
            "0": {
              "name": "string.unquoted.label.mermaid"
            }
          }
        },
        {
          "name": "keyword.control.transition.mermaid",
          "match": "(-{3,}|-{2,}>|==+|={3,}|={2,}>|\\.\\-+>)"
        },
        {
          "name": "keyword.control.transition.mermaid",
          "match": ":::"
        },
        {
          "name": "keyword.control.transition.mermaid",
          "match": "(\\|\\||--|\\.\\.|\\|<|>\\|?|<|>)"
        }
      ]
    }
  },
  "fileTypes": ["mmd", "mermaid"]

}
